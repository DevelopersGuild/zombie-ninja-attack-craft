//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;

public class ChargerAI : Enemy {
    //Positions
    //public Player player;
    //public float AgroRange;
    //public EnemyMoveController moveController;

    private Vector2 speed, distance;

    //State checks
    private bool isAggroed;
    private bool isTired;
    private bool isCharging;

    //Components
    private Animator animator;
    private Rigidbody2D rb;
    //private MoveControllerNoAnimation moveControllerNoAnimation;

    System.Random rnd;
    private double t, timer;
    private float temp;

    public void Start() {
        //moveControllerNoAnimation = GetComponent<MoveControllerNoAnimation> ();
        animator = GetComponent<Animator>();
        player = FindObjectOfType<Player>();
        rb = GetComponent<Rigidbody2D>();
        moveController = GetComponent<EnemyMoveController>();

        distance = new Vector2(0, 0);
        speed = new Vector2(0, 0);

        temp = 0;
        t = 1;
        timer = 5;

        isAggroed = false;
        isTired = false;
        isCharging = false;
        GetComponent<Rigidbody2D>().mass = 5;
    }

    void Update() {
        rnd = new System.Random();
        distance = player.transform.position - transform.position;
        //Check distance between the player and charger. If its close enough, aggro
        if (distance.magnitude <= AgroRange && isTired == false) {
            Debug.Log("aggroed:" + isAggroed);
            isAggroed = true;
            isCharging = true;
            animator.SetBool("isCharging", true);
        }
        if (distance.magnitude > AgroRange) {
            isAggroed = false;
            Debug.Log("aggroed:" + isAggroed);
        }
        // speed = new Vector2(0, 0);

        if (isAggroed) {
            //Charge while the charge animation is playing
            if (isCharging) {
                Debug.Log("Test Point 2");
                findPos();

                RunStraight(direction, temp);
                temp = 5;
                //speed = new Vector2(5 * xSpeed, 5 * ySpeed);
                //speed = speed * 3;
            }
            //Dont move isaf charger has already charged and is now tired
            if (isTired) {
                Debug.Log("Test Point 3");
                Debug.Log("TiRED" + isTired);
                temp = 1;
                moveController.Move(0, 0);
            }
        } //If the player isnt aggroed, it moves randomly
        else {
            //Debug.Log ("is");
            idle(t);
            temp -= Time.deltaTime;
            t -= Time.deltaTime;
            //GetComponent<Rigidbody2D> ().velocity = speed;
        }
    }

    public void DoneCharging() {
        isTired = true;
        animator.SetBool("isCharging", false);
        animator.SetBool("isTired", true);
    }

    public void DoneResting() {
        isTired = false;
        animator.SetBool("isTired", false);
    }

    private void RunStraight(Vector2 sp, float extra) {
        if (extra == 1) {
            //speed = new Vector2(xSp, ySp);
            //speed = 2 * speed;
            Debug.Log("RUNNING STRAIGHT toward : " + sp);
            moveController.Move(sp, 4);
        }

    }

    public void onDeath()
    {
        //animation
    }
}


